train_cfg = ['iter = mnist' char(10)...
 'path_img = ../example/MNIST/data/train-images-idx3-ubyte.gz' char(10)...
 'path_label = ../example/MNIST/data/train-labels-idx1-ubyte.gz' char(10)...
 'shuffle = 1' char(10)...
 'iter = end' char(10)...
 'input_shape = 1,1,784' char(10)...
 'batch_size = 100' char(10)  ];

eval_cfg = ['iter = mnist' char(10)...
  'path_img = "../example/MNIST/data/t10k-images-idx3-ubyte.gz"' char(10)...
  'path_label = "../example/MNIST/data/t10k-labels-idx1-ubyte.gz"' char(10)...
  'iter = end' char(10)...
  'input_shape = 1,1,784' char(10)...
  'batch_size = 100' char(10)];

cfg = [...
  'netconfig=start' char(10)...
  'layer[+1:fc1] = fullc:fc1' char(10)...
  '  nhidden = 100' char(10)...
  '  init_sigma = 0.01' char(10)...
  'layer[+1:sg1] = sigmoid:se1' char(10)...
  'layer[sg1->fc2] = fullc:fc2' char(10)...
  '  nhidden = 10' char(10)...
  '  init_sigma = 0.01' char(10)...
  'layer[+0] = softmax' char(10)...
  'netconfig=end' char(10)...
  'input_shape = 1,1,784' char(10)...
  'batch_size = 100' char(10)...
  'random_type = gaussian' char(10)];

net = Net('cpu', cfg);
net.set_param('eta', '0.1');
net.set_param('momentum', '0.9');
net.set_param('metric[label]', 'error');

net.init_model();
net.start_round(0);
train = DataIter(train_cfg);
eval = DataIter(eval_cfg);
